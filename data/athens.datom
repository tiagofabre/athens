["~#datascript/DB",["^ ","~:schema",["^ ","~:schema/version",["^ "],"~:block/uid",["^ ","~:db/unique","~:db.unique/identity"],"~:node/title",["^ ","^4","^5"],"~:attrs/lookup",["^ ","~:db/cardinality","~:db.cardinality/many"],"~:block/children",["^ ","^8","^9","~:db/valueType","~:db.type/ref"],"~:block/refs",["^ ","^8","^9","^;","^<"]],"~:datoms",["~#list",[["~#datascript/Datom",[17,"~:block/string","Links with `[[]]`, `#`, or `#[[]]`: Welcome Welcome Welcome",536871064]],["^@",[63,"^A","Is there anything special about the Welcome page?",536871064]],["^@",[64,"^A","Welcome is a special page. When you restart Athens, any changes you make to this page will be overwritten, so don't write anything you need in this page!",536871064]],["^@",[69,"^2",1,536870916]],["^@",[70,"^3","04-02-2021",536870917]],["^@",[70,"~:create/time",1617403120935,536870917]],["^@",[70,"~:edit/time",1617403120935,536870917]],["^@",[70,"^6","April 02, 2021",536870917]],["^@",[78,"^:",89,536870970]],["^@",[78,"^:",131,536871089]],["^@",[78,"^:",139,536871102]],["^@",[78,"^:",161,536871179]],["^@",[78,"^:",311,536871546]],["^@",[78,"^3","d0dde0a4f",536870960]],["^@",[78,"^B",1617405406242,536870960]],["^@",[78,"^C",1617405406242,536870960]],["^@",[78,"^6","Assembly, OS, JVM, Process and thread",536871208]],["^@",[81,"~:block/open",true,536870961]],["^@",[81,"~:block/order",0,536871104]],["^@",[81,"^A","CPUs understand instructions [instruction sets](http://linasm.sourceforge.net/docs/instructions/cpu.php), they have [registers](https://en.wikipedia.org/wiki/Processor_register), a kind of memory where you can add values and call an instruction. The same principle of functions with arguments in [high-level languages](https://en.wikipedia.org/wiki/High-level_programming_language). The CPU executes the instructions and write the result in other registers where you can read that.",536870961]],["^@",[81,"^3","755361941",536870961]],["^@",[82,"^D",true,536870961]],["^@",[82,"^E",1,536871104]],["^@",[82,"^A","The language used to communicate with a CPU is assembly and we use an assembler to translate high level languages to assembly. The CPU is highly attached to an assembly definition, a [x86](https://en.wikipedia.org/wiki/X86) CPU has different instructions from an [ARM](https://en.wikipedia.org/wiki/ARM_architecture). This makes really hard to develop something in assembly. One approach to solve that is to develop a program in [C](https://en.wikipedia.org/wiki/C_%28programming_language%29) and use a [compiler](https://en.wikipedia.org/wiki/Compiler) or multiple compilers to [optimize](https://www.ibm.com/docs/en/aix/7.1?topic=techniques-compiling-optimization) the code and generate an assembly to a specific CPU architecture.",536871056]],["^@",[82,"^3","73db5e331",536870961]],["^@",[83,"^:",90,536871057]],["^@",[83,"^D",true,536870961]],["^@",[83,"^E",2,536871104]],["^@",[83,"^A","An operating system abstract assembly instructions to read/write a file, allocate memory, create and terminate processes through [sys calls](https://en.wikipedia.org/wiki/System_call). To access those sys calls you can use libraries. In C for Linux you can use [SO](https://superuser.com/questions/71404/what-is-an-so-file) [libc](https://www.gnu.org/software/libc/) and for Windows you can use the [DLL](https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/dynamic-link-library) [win32](https://docs.microsoft.com/en-us/windows/win32/desktop-programming)",536871003]],["^@",[83,"^3","d9c9a5aaa",536870961]],["^@",[88,"~:from-undo-redo",true,536870963]],["^@",[89,"^D",true,536870970]],["^@",[89,"^E",0,536870973]],["^@",[89,"^=",70,536870972]],["^@",[89,"^A","[[April 02, 2021]] ",536870972]],["^@",[89,"^3","9829cf8d0",536870970]],["^@",[90,"^:",92,536871036]],["^@",[90,"^:",94,536871037]],["^@",[90,"^:",109,536871047]],["^@",[90,"^:",110,536871048]],["^@",[90,"^D",true,536870971]],["^@",[90,"^E",0,536871057]],["^@",[90,"^=",114,536871062]],["^@",[90,"^A","The way to make your application access those libraries is using a [linker](https://en.wikipedia.org/wiki/Linker_%28computing%29). There are two ways of linkage ([dynamic and static](https://www.geeksforgeeks.org/static-and-dynamic-linking-in-operating-systems/)) [[Static x dynamic linkage]]:",536871062]],["^@",[90,"^3","2d8dc9b8c",536870971]],["^@",[92,"^D",true,536871009]],["^@",[92,"^E",0,536871036]],["^@",[92,"^A","Static linkage where you need the binaries in object format (before them as compiled files SO/DLL). Usually using extension `.o` in linux or `.a/.lib` in windows. This way of linkage merges the lib instructions with the application being compiled.",536871016]],["^@",[92,"^3","3c73055eb",536871009]],["^@",[94,"^D",true,536871014]],["^@",[94,"^E",1,536871037]],["^@",[94,"^A","Dynamic linkage where you just need the header files of a lib (.h files for C) that explicits the public functions exposed in the binary that is installed in a specific SO. This way the lib instructions are installed once and reused by multiple applications. One disadvantage of this method is you need to ensure the target machine has the lib you require in your application",536871020]],["^@",[94,"^3","9f6d040d6",536871014]],["^@",[109,"^D",true,536871043]],["^@",[109,"^E",2,536871047]],["^@",[109,"^A","Go lang tries to use most static libraries as possible to avoid problems with dependencies. You can build the application in your machine and run into another without problems (most of the time). https://golang.org/doc/modules/managing-dependencies",536871121]],["^@",[109,"^3","0242bebd1",536871043]],["^@",[110,"^D",true,536871045]],["^@",[110,"^E",3,536871122]],["^@",[110,"^A","Another advantage of dynamic linkage is when you have a bug fix or even a security fix. Using dynamic linkage you can just replace the library to a newer version and all the applications that uses that will have the fix. Using static linkage you have to bump all the lib deps and rebuild all the applications individually to have the same result.",536871049]],["^@",[110,"^3","a055da9ad",536871045]],["^@",[111,"^D",true,536871050]],["^@",[111,"^E",3,536871104]],["^@",[111,"^=",116,536871075]],["^@",[111,"^A","Another approach to develop in high level languages and have binary instructions in assembly is using an interpreter [[Compiler x interpreter]]. Basically an interpreters is a program that reads a source code, parse it to an internal structure (ex: [AST](https://www.eclipse.org/articles/Article-JavaCodeManipulation_AST/)) execute all instructions and finishes itself.",536871085]],["^@",[111,"^3","8b83b06a2",536871050]],["^@",[114,"^:",115,536871059]],["^@",[114,"^:",118,536871066]],["^@",[114,"^3","f22edaeeb",536871059]],["^@",[114,"^B",1617410591070,536871059]],["^@",[114,"^C",1617410591070,536871059]],["^@",[114,"^6","Static x dynamic linkage",536871060]],["^@",[115,"^D",true,536871059]],["^@",[115,"^E",0,536871059]],["^@",[115,"^=",119,536871066]],["^@",[115,"^A","{{[[TODO]]}}  Add decision matrix",536871066]],["^@",[115,"^3","a6b0f81b8",536871059]],["^@",[115,"^B",1617410591070,536871059]],["^@",[115,"^C",1617410591070,536871059]],["^@",[116,"^:",117,536871061]],["^@",[116,"^:",120,536871067]],["^@",[116,"^3","ad6b6ee99",536871061]],["^@",[116,"^B",1617410607325,536871061]],["^@",[116,"^C",1617410607325,536871061]],["^@",[116,"^6","Compiler x interpreter",536871061]],["^@",[117,"^D",true,536871061]],["^@",[117,"^E",0,536871061]],["^@",[117,"^=",119,536871067]],["^@",[117,"^A","{{[[TODO]]}} Add decision matrix",536871067]],["^@",[117,"^3","b4ec2fd3f",536871061]],["^@",[117,"^B",1617410607325,536871061]],["^@",[117,"^C",1617410607325,536871061]],["^@",[118,"^D",true,536871066]],["^@",[118,"^E",1,536871066]],["^@",[118,"^A","",536871066]],["^@",[118,"^3","f23060e93",536871066]],["^@",[119,"^3","4f2315189",536871066]],["^@",[119,"^B",1617410709456,536871066]],["^@",[119,"^C",1617410709456,536871066]],["^@",[119,"^6","TODO",536871066]],["^@",[120,"^D",true,536871067]],["^@",[120,"^E",1,536871067]],["^@",[120,"^A","",536871067]],["^@",[120,"^3","44968bd53",536871067]],["^@",[121,"^:",122,536871068]],["^@",[121,"^3","126561b13",536871068]],["^@",[121,"^B",1617410831080,536871068]],["^@",[121,"^C",1617410831080,536871068]],["^@",[121,"^6","Make files",536871068]],["^@",[122,"^D",true,536871068]],["^@",[122,"^E",0,536871068]],["^@",[122,"^A","https://www.tutorialspoint.com/makefile/makefile_quick_guide.htm",536871069]],["^@",[122,"^3","1de901131",536871068]],["^@",[122,"^B",1617410831080,536871068]],["^@",[122,"^C",1617410831080,536871068]],["^@",[123,"^:",124,536871070]],["^@",[123,"^:",125,536871071]],["^@",[123,"^:",126,536871072]],["^@",[123,"^:",127,536871073]],["^@",[123,"^:",128,536871074]],["^@",[123,"^3","f753c43f0",536871070]],["^@",[123,"^B",1617410890754,536871070]],["^@",[123,"^C",1617410890754,536871070]],["^@",[123,"^6","Package manager",536871070]],["^@",[124,"^D",true,536871070]],["^@",[124,"^E",0,536871070]],["^@",[124,"^A","https://en.wikipedia.org/wiki/Package_manager",536871071]],["^@",[124,"^3","456e79b83",536871070]],["^@",[124,"^B",1617410890754,536871070]],["^@",[124,"^C",1617410890754,536871070]],["^@",[125,"^D",true,536871071]],["^@",[125,"^E",1,536871071]],["^@",[125,"^A","Homebrew - mac",536871072]],["^@",[125,"^3","bdcb87475",536871071]],["^@",[126,"^D",true,536871072]],["^@",[126,"^E",2,536871072]],["^@",[126,"^A","Choco - windows",536871073]],["^@",[126,"^3","d5c27f2ef",536871072]],["^@",[127,"^D",true,536871073]],["^@",[127,"^E",3,536871073]],["^@",[127,"^A","npm - js/node",536871074]],["^@",[127,"^3","ca74736f4",536871073]],["^@",[128,"^D",true,536871074]],["^@",[128,"^E",4,536871074]],["^@",[128,"^A","",536871074]],["^@",[128,"^3","c419845ca",536871074]],["^@",[129,"^D",true,536871081]],["^@",[129,"^E",4,536871104]],["^@",[129,"^A","The step of read the code and parse it to an internal representation can be made separated from the execution ([AoT compilation](https://docs.oracle.com/javame/config/cdc/cdc-opt-impl/ojmeec/1.1/custom/html/aot.htm), [2](https://en.wikipedia.org/wiki/Ahead-of-time_compilation)). This is called pre compilation, in python precompiled files have .pyc extension.",536871185]],["^@",[129,"^3","b0c69a110",536871081]],["^@",[131,"^:",138,536871123]],["^@",[131,"^:",142,536871107]],["^@",[131,"^:",143,536871112]],["^@",[131,"^:",144,536871117]],["^@",[131,"^:",148,536871140]],["^@",[131,"^:",149,536871145]],["^@",[131,"^:",150,536871152]],["^@",[131,"^:",151,536871155]],["^@",[131,"^:",156,536871168]],["^@",[131,"^D",true,536871089]],["^@",[131,"^E",2,536871104]],["^@",[131,"^=",140,536871153]],["^@",[131,"^A","Process X Threads [[Threads x Fork]]",536871153]],["^@",[131,"^3","530b029cc",536871089]],["^@",[138,"^:",146,536871132]],["^@",[138,"^:",147,536871133]],["^@",[138,"^D",true,536871096]],["^@",[138,"^E",3,536871107]],["^@",[138,"^A","Sometimes it is required to keep a slow/heavy state in memory (e.g: connect to a database), and start a process, do this operation and kill the process is not the fastest way of solve that.\nSome solutions are: ",536871131]],["^@",[138,"^3","355d17b9a",536871096]],["^@",[139,"^:",81,536871104]],["^@",[139,"^:",82,536871104]],["^@",[139,"^:",83,536871104]],["^@",[139,"^:",111,536871104]],["^@",[139,"^:",129,536871104]],["^@",[139,"^D",true,536871102]],["^@",[139,"^E",1,536871102]],["^@",[139,"^A","Hardware instructions",536871103]],["^@",[139,"^3","f7b407881",536871102]],["^@",[140,"^:",141,536871105]],["^@",[140,"^:",168,536871205]],["^@",[140,"^3","a445be7a6",536871105]],["^@",[140,"^B",1617412447548,536871105]],["^@",[140,"^C",1617412447548,536871105]],["^@",[140,"^6","Threads x Fork",536871105]],["^@",[141,"^D",true,536871105]],["^@",[141,"^E",0,536871105]],["^@",[141,"^=",119,536871205]],["^@",[141,"^A","{{[[TODO]]}} dicision matrix",536871205]],["^@",[141,"^3","5f21587b8",536871105]],["^@",[141,"^B",1617412447548,536871105]],["^@",[141,"^C",1617412447548,536871105]],["^@",[142,"^D",true,536871106]],["^@",[142,"^E",1,536871112]],["^@",[142,"^A","Windows and Mac OS have a bigger overhead to create processes in comparison with linux ([Windows x linux processes](https://stackoverflow.com/questions/47845/why-is-creating-a-new-process-more-expensive-on-windows-than-linux))",536871117]],["^@",[142,"^3","28b57ca7b",536871106]],["^@",[143,"^D",true,536871112]],["^@",[143,"^E",0,536871112]],["^@",[143,"^A","When you run a compile or an interpreter the OS is responsible to allocate memory and start a process that will execute the instructions generated by the interpreter or compiler.",536871115]],["^@",[143,"^3","954f08038",536871112]],["^@",[144,"^D",true,536871117]],["^@",[144,"^E",2,536871117]],["^@",[144,"^A","One way to have multiple executions of the same code is using the a fork or [Copy on write](https://en.wikipedia.org/wiki/Copy-on-write), that spawns a new process but this new process (child process) shares the code and memory with the parent process, so this mechanism is not duplicating the memory allocated by the parent process.",536871120]],["^@",[144,"^3","b4d4d5e89",536871117]],["^@",[146,"^D",true,536871131]],["^@",[146,"^E",0,536871132]],["^@",[146,"^A","mod_perl and mod_php that are modules inside apache and every time a fork is made the child process can interpret php",536871133]],["^@",[146,"^3","f5e1c6faf",536871131]],["^@",[147,"^D",true,536871133]],["^@",[147,"^E",1,536871133]],["^@",[147,"^A","Fast CGI The interpreter and the program have it own process and they communicate between a TCP protocol",536871138]],["^@",[147,"^3","fa364b0db",536871133]],["^@",[148,"^D",true,536871139]],["^@",[148,"^E",4,536871140]],["^@",[148,"^A","In windows there aren't the fork mechanism, it's optimized to use threads.",536871142]],["^@",[148,"^3","a1057d5e6",536871139]],["^@",[149,"^D",true,536871143]],["^@",[149,"^E",5,536871145]],["^@",[149,"^A","A process is managed by the OS, it can be pause and resume the process. Another responsibility of OS is to manage the memory the process will have access. Each process can only see a virtual memory that is mapped to the physical memory and the OS guarantee memory isolation between the processes.",536871150]],["^@",[149,"^3","b8b626ba1",536871143]],["^@",[150,"^D",true,536871152]],["^@",[150,"^E",6,536871152]],["^@",[150,"^A","When the fork method is not available or too expensive, the another approach is to use threads. Thread is a small unit of execution and a process can start multiple threads. One difference from a process is in the memory management, the threads doesn't have memory isolation so any thread can access all the process memory.",536871154]],["^@",[150,"^3","ce04c0f83",536871152]],["^@",[151,"^:",152,536871159]],["^@",[151,"^:",154,536871161]],["^@",[151,"^D",true,536871155]],["^@",[151,"^E",7,536871155]],["^@",[151,"^A","This process of manage thread access to memory can be hard since multiple threads can access the same resource at the same time what could return wrong values to a computation. A primitive mechanism to solve that is using [locks](https://en.wikipedia.org/wiki/Lock_%28computer_science%29)",536871158]],["^@",[151,"^3","9890a7bb5",536871155]],["^@",[152,"^D",true,536871158]],["^@",[152,"^E",1,536871163]],["^@",[152,"^A","[Deadlock](https://en.wikipedia.org/wiki/Deadlock)",536871160]],["^@",[152,"^3","50d691a66",536871158]],["^@",[154,"^D",true,536871161]],["^@",[154,"^E",0,536871161]],["^@",[154,"^A","Considerations:",536871162]],["^@",[154,"^3","d624cf81f",536871161]],["^@",[156,"^:",741,536871631]],["^@",[156,"^D",true,536871165]],["^@",[156,"^E",8,536871168]],["^@",[156,"^=",742,536871631]],["^@",[156,"^A","[Scheduler](https://www.geeksforgeeks.org/thread-scheduling/) - Used to run, pause and resume threads. lock will affect directly the scheduler that will prevent others thread from accessing a specific resource. [[Scheduler]]",536871634]],["^@",[156,"^3","dcb804ee2",536871165]],["^@",[156,"^C",1617557201122,536871631]],["^@",[161,"^:",162,536871448]],["^@",[161,"^:",163,536871447]],["^@",[161,"^:",164,536871449]],["^@",[161,"^D",true,536871178]],["^@",[161,"^E",3,536871179]],["^@",[161,"^A","[JVM](https://docs.oracle.com/javase/9/vm/java-virtual-machine-technology-overview.htm#JSJVM-GUID-982B244A-9B01-479A-8651-CB6475019281)",536871197]],["^@",[161,"^3","2ac3ca782",536871178]],["^@",[162,"^D",true,536871180]],["^@",[162,"^E",1,536871448]],["^@",[162,"^A","JIT mesure the performance in realtime and optimize that. If something is not being used the JIT will not even care about that, what makes the process faster for this kind of cases.",536871189]],["^@",[162,"^3","3d81bb6a9",536871180]],["^@",[163,"^D",true,536871187]],["^@",[163,"^E",0,536871447]],["^@",[163,"^A","Java Code -> bytecode -> native code",536871188]],["^@",[163,"^3","e0ba013a5",536871187]],["^@",[164,"^D",true,536871189]],["^@",[164,"^E",2,536871449]],["^@",[164,"^A","Avoid the usage of OS libs (probably the same as Dynamic linkage). Uses something inside JVM instead call a lib as OpenSSL as others languages (python, ruby, perl) do.\nOne advantage of this is sometimes those libraries are not thread safe and you need to serialize the access to that.",536871203]],["^@",[164,"^3","2adb8d359",536871189]],["^@",[168,"^:",733,536871613]],["^@",[168,"^:",734,536871615]],["^@",[168,"^:",735,536871617]],["^@",[168,"^D",true,536871205]],["^@",[168,"^E",1,536871205]],["^@",[168,"^A","Linux threads",536871611]],["^@",[168,"^3","fc3b206e7",536871205]],["^@",[171,"^:",172,536871210]],["^@",[171,"^:",173,536871211]],["^@",[171,"^:",184,536871244]],["^@",[171,"^:",196,536871293]],["^@",[171,"^:",207,536871326]],["^@",[171,"^:",214,536871343]],["^@",[171,"^:",215,536871344]],["^@",[171,"^:",233,536871389]],["^@",[171,"^:",234,536871392]],["^@",[171,"^:",244,536871422]],["^@",[171,"^:",271,536871476]],["^@",[171,"^:",272,536871478]],["^@",[171,"^:",274,536871479]],["^@",[171,"^3","912007308",536871210]],["^@",[171,"^B",1617462785414,536871210]],["^@",[171,"^C",1617462785414,536871210]],["^@",[171,"^6","libs, components, databases, paradigms, package managers",536871402]],["^@",[172,"^:",277,536871485]],["^@",[172,"^:",278,536871485]],["^@",[172,"^:",282,536871486]],["^@",[172,"^D",true,536871210]],["^@",[172,"^E",1,536871477]],["^@",[172,"^=",192,536871479]],["^@",[172,"^=",283,536871487]],["^@",[172,"^A","#libraries #[[Stored procedures]] #J2EE #Erlang #pragmatic-programmer",536871487]],["^@",[172,"^3","579a1cfb6",536871210]],["^@",[172,"^B",1617462785414,536871210]],["^@",[172,"^C",1617462785414,536871210]],["^@",[173,"^:",174,536871215]],["^@",[173,"^:",175,536871216]],["^@",[173,"^:",176,536871218]],["^@",[173,"^:",178,536871227]],["^@",[173,"^:",179,536871228]],["^@",[173,"^:",181,536871233]],["^@",[173,"^:",183,536871240]],["^@",[173,"^D",true,536871211]],["^@",[173,"^E",4,536871485]],["^@",[173,"^A","Components",536871213]],["^@",[173,"^3","6bddc8d59",536871211]],["^@",[174,"^D",true,536871213]],["^@",[174,"^E",1,536871240]],["^@",[174,"^A","(MS) OLE object linking and embeding",536871221]],["^@",[174,"^3","b14af37c2",536871213]],["^@",[175,"^D",true,536871216]],["^@",[175,"^E",2,536871240]],["^@",[175,"^A","(MS) MFC Microsoft foundation...",536871225]],["^@",[175,"^3","2a4d16427",536871216]],["^@",[176,"^D",true,536871218]],["^@",[176,"^E",3,536871240]],["^@",[176,"^A","(Delphi) VCL visual components library",536871223]],["^@",[176,"^3","3e4cf36cb",536871218]],["^@",[178,"^D",true,536871227]],["^@",[178,"^E",4,536871240]],["^@",[178,"^A","OCX",536871228]],["^@",[178,"^3","f00f8e587",536871227]],["^@",[179,"^D",true,536871228]],["^@",[179,"^E",5,536871240]],["^@",[179,"^A","COM - communication between components",536871230]],["^@",[179,"^3","5eecd786c",536871228]],["^@",[181,"^D",true,536871233]],["^@",[181,"^E",6,536871240]],["^@",[181,"^A","It was a big deal since the source code of a components could be shared/sold without it source code ",536871235]],["^@",[181,"^3","78e2e74c0",536871233]],["^@",[183,"^D",true,536871240]],["^@",[183,"^E",0,536871240]],["^@",[183,"^A","Searching for an easier way of create UI, some companies have created components",536871241]],["^@",[183,"^3","e86b929f0",536871240]],["^@",[184,"^:",185,536871249]],["^@",[184,"^:",186,536871251]],["^@",[184,"^:",187,536871253]],["^@",[184,"^:",188,536871257]],["^@",[184,"^:",189,536871261]],["^@",[184,"^:",190,536871274]],["^@",[184,"^:",194,536871285]],["^@",[184,"^D",true,536871243]],["^@",[184,"^E",5,536871485]],["^@",[184,"^A","Local Network protocols improving",536871254]],["^@",[184,"^3","7f6255df3",536871243]],["^@",[185,"^D",true,536871248]],["^@",[185,"^E",0,536871249]],["^@",[185,"^A","IPXSPX",536871250]],["^@",[185,"^3","3620338fd",536871248]],["^@",[186,"^D",true,536871251]],["^@",[186,"^E",1,536871251]],["^@",[186,"^A","Windows netbios",536871252]],["^@",[186,"^3","9614a77e7",536871251]],["^@",[187,"^D",true,536871253]],["^@",[187,"^E",2,536871253]],["^@",[187,"^A","The share of files in network was becoming easier and they saw they could have the application in each user machine pointing to a server with primitive database (basically big files using indexes), making the data available to everyone.",536871270]],["^@",[187,"^3","ea1a8f707",536871253]],["^@",[188,"^D",true,536871257]],["^@",[188,"^E",3,536871257]],["^@",[188,"^A","The problem of this approach was concurrency problems, the languages were not prepared to handle that and usually the file got corrupted. The solution for that is just block the entire file, what make the access to a file something slow and read the file stream and send the modifications. Problems: the network can fail during the process, the client application or even the server application can fail during the process.",536871271]],["^@",[188,"^3","dafeb58f7",536871257]],["^@",[189,"^D",true,536871261]],["^@",[189,"^E",4,536871261]],["^@",[189,"^A","Looking for solution the companies started to make/use more robust database as Ingres, Cahcé, InterBase, DB2, Oracle, sybase ans SQL server. This approach decouple the application from read/write into the DB, so now we have only one application reading and writing into the DB. Decreasing the chances of problems/file corruption",536871273]],["^@",[189,"^3","7372845fc",536871261]],["^@",[190,"^D",true,536871274]],["^@",[190,"^E",5,536871274]],["^@",[190,"^=",192,536871451]],["^@",[190,"^A","Oracle and SQL server introduced [[Stored procedures]] where you can move business logics to the database, what was great since deploy wasn't something easy and you had to update client by client using a flop disk, even works in cases where the company has multiple geo locations (internet wasn't an option at this time). The downside of that is your database will be slower.",536871452]],["^@",[190,"^3","0a5926d48",536871274]],["^@",[192,"^:",193,536871278]],["^@",[192,"^:",258,536871456]],["^@",[192,"^3","bdad1dad5",536871278]],["^@",[192,"^B",1617464602829,536871278]],["^@",[192,"^C",1617464602829,536871278]],["^@",[192,"^6","Stored procedures",536871278]],["^@",[193,"^D",true,536871278]],["^@",[193,"^E",0,536871278]],["^@",[193,"^=",119,536871456]],["^@",[193,"^A","{{[[TODO]]}} decision matrix",536871456]],["^@",[193,"^3","30d2d9a8e",536871278]],["^@",[193,"^B",1617464602829,536871278]],["^@",[193,"^C",1617464602829,536871278]],["^@",[194,"^D",true,536871285]],["^@",[194,"^E",6,536871285]],["^@",[194,"^A","An improvement of this model is to add another application between the DB and the User application. Moving the business logic from stored procedures from the DB to this server. Now we have a DB and user client application with less responsibilities. This new model is classical and is called 3 tiers architecture",536871291]],["^@",[194,"^3","8b36b260d",536871285]],["^@",[196,"^:",197,536871295]],["^@",[196,"^:",198,536871297]],["^@",[196,"^:",199,536871300]],["^@",[196,"^:",200,536871302]],["^@",[196,"^:",201,536871303]],["^@",[196,"^:",202,536871306]],["^@",[196,"^:",203,536871309]],["^@",[196,"^:",205,536871317]],["^@",[196,"^D",true,536871289]],["^@",[196,"^E",6,536871485]],["^@",[196,"^A","Corporate software",536871294]],["^@",[196,"^3","6989d009e",536871289]],["^@",[197,"^D",true,536871294]],["^@",[197,"^E",0,536871295]],["^@",[197,"^A","Using components, OO, business logics in distributed servers",536871299]],["^@",[197,"^3","1d1a8d8fb",536871294]],["^@",[198,"^D",true,536871297]],["^@",[198,"^E",1,536871297]],["^@",[198,"^A","Network protocols interoperability",536871298]],["^@",[198,"^3","680abee9e",536871297]],["^@",[199,"^D",true,536871300]],["^@",[199,"^E",2,536871300]],["^@",[199,"^A","DCOM - Distributed COM/COM+",536871302]],["^@",[199,"^3","a5a8f4dcd",536871300]],["^@",[200,"^D",true,536871302]],["^@",[200,"^E",3,536871302]],["^@",[200,"^A","CORBA",536871303]],["^@",[200,"^3","b3e32fa62",536871302]],["^@",[201,"^D",true,536871303]],["^@",[201,"^E",4,536871303]],["^@",[201,"^A","They were basically trying to implement what today is called RPC (Remote procedure call)",536871305]],["^@",[201,"^3","e40392448",536871303]],["^@",[202,"^D",true,536871306]],["^@",[202,"^E",5,536871306]],["^@",[202,"^A","Dynamic lib need a header file to know what methods are available to be called. But Now we need a kind of header for components in other machines (application servers). They've created IIOP and ORB to handle that.",536871309]],["^@",[202,"^3","65fb3c2f7",536871306]],["^@",[203,"^D",true,536871309]],["^@",[203,"^E",6,536871309]],["^@",[203,"^A","[J2EE](https://www.oracle.com/java/technologies/appmodel.html) consolidate everything related to that using Servlets, MODEL 2/MVC, EJB, JMS",536871385]],["^@",[203,"^3","fbbf51efc",536871309]],["^@",[205,"^D",true,536871317]],["^@",[205,"^E",7,536871317]],["^@",[205,"^A","XML, SOAP, UML, Design patterns/Gang of four",536871325]],["^@",[205,"^3","8cec07b0a",536871317]],["^@",[207,"^:",208,536871330]],["^@",[207,"^:",209,536871331]],["^@",[207,"^:",210,536871334]],["^@",[207,"^:",211,536871335]],["^@",[207,"^:",212,536871336]],["^@",[207,"^:",213,536871338]],["^@",[207,"^:",226,536871372]],["^@",[207,"^D",true,536871325]],["^@",[207,"^E",7,536871485]],["^@",[207,"^A","In parallel",536871332]],["^@",[207,"^3","0841fde7f",536871325]],["^@",[208,"^D",true,536871327]],["^@",[208,"^E",1,536871331]],["^@",[208,"^A","PERL, Python, PHP, MySQL",536871329]],["^@",[208,"^3","03d8c54f9",536871327]],["^@",[209,"^D",true,536871331]],["^@",[209,"^E",0,536871331]],["^@",[209,"^A","Agile manifesto",536871333]],["^@",[209,"^3","ec442ef24",536871331]],["^@",[210,"^D",true,536871334]],["^@",[210,"^E",2,536871334]],["^@",[210,"^A","Crash of 2001",536871335]],["^@",[210,"^3","745b74c08",536871334]],["^@",[211,"^D",true,536871335]],["^@",[211,"^E",3,536871335]],["^@",[211,"^A","Ruby",536871336]],["^@",[211,"^3","de34385a2",536871335]],["^@",[212,"^D",true,536871336]],["^@",[212,"^E",4,536871336]],["^@",[212,"^A","Ruby on rails 2004",536871337]],["^@",[212,"^3","3ab076cf7",536871336]],["^@",[213,"^D",true,536871338]],["^@",[213,"^E",5,536871338]],["^@",[213,"^A","Open source techs were increasing and fighting against corporate software",536871341]],["^@",[213,"^3","0a0b86d42",536871338]],["^@",[214,"^:",221,536871359]],["^@",[214,"^:",222,536871360]],["^@",[214,"^:",223,536871363]],["^@",[214,"^:",225,536871368]],["^@",[214,"^D",true,536871342]],["^@",[214,"^E",8,536871485]],["^@",[214,"^A","OOP",536871344]],["^@",[214,"^3","9ba93419e",536871342]],["^@",[215,"^:",216,536871348]],["^@",[215,"^:",217,536871349]],["^@",[215,"^:",218,536871351]],["^@",[215,"^:",219,536871353]],["^@",[215,"^:",288,536871493]],["^@",[215,"^D",true,536871344]],["^@",[215,"^E",9,536871485]],["^@",[215,"^A","FP",536871346]],["^@",[215,"^3","4c2b655d5",536871344]],["^@",[216,"^D",true,536871346]],["^@",[216,"^E",0,536871348]],["^@",[216,"^=",285,536871488]],["^@",[216,"^A","https://en.wikipedia.org/wiki/Alonzo_Church #Alonzo-Church",536871488]],["^@",[216,"^3","7032716e6",536871346]],["^@",[217,"^D",true,536871349]],["^@",[217,"^E",1,536871489]],["^@",[217,"^=",287,536871491]],["^@",[217,"^A","[[Lambda calculus]]",536871493]],["^@",[217,"^3","1a6ab5458",536871349]],["^@",[218,"^D",true,536871351]],["^@",[218,"^E",3,536871493]],["^@",[218,"^A","Functions as parameters",536871353]],["^@",[218,"^3","9d5a2d31d",536871351]],["^@",[219,"^D",true,536871353]],["^@",[219,"^E",4,536871493]],["^@",[219,"^A","LISP Homoiconicity",536871356]],["^@",[219,"^3","64df57020",536871353]],["^@",[221,"^D",true,536871358]],["^@",[221,"^E",1,536871368]],["^@",[221,"^A","C -> C++",536871362]],["^@",[221,"^3","8924c4487",536871358]],["^@",[222,"^:",224,536871367]],["^@",[222,"^D",true,536871360]],["^@",[222,"^E",2,536871368]],["^@",[222,"^A","Classes everywhere",536871365]],["^@",[222,"^3","337a1ee47",536871360]],["^@",[223,"^D",true,536871363]],["^@",[223,"^E",3,536871368]],["^@",[223,"^A","",536871363]],["^@",[223,"^3","f8c10257d",536871363]],["^@",[224,"^D",true,536871365]],["^@",[224,"^E",0,536871367]],["^@",[224,"^A","Cobol",536871366]],["^@",[224,"^3","fd00f9757",536871365]],["^@",[225,"^D",true,536871368]],["^@",[225,"^E",0,536871368]],["^@",[225,"^A","Smalltalk is the pure OOP",536871370]],["^@",[225,"^3","d31d03c01",536871368]],["^@",[226,"^:",227,536871375]],["^@",[226,"^:",228,536871377]],["^@",[226,"^D",true,536871372]],["^@",[226,"^E",6,536871372]],["^@",[226,"^A","Pragmatic programmer",536871373]],["^@",[226,"^3","6b940ac89",536871372]],["^@",[227,"^D",true,536871374]],["^@",[227,"^E",0,536871375]],["^@",[227,"^A","Every programmer must learn ate least a programming language every year (https://blog.teamtreehouse.com/learn-a-new-programming-language-every-year)",536871460]],["^@",[227,"^3","9101312c2",536871374]],["^@",[228,"^D",true,536871377]],["^@",[228,"^E",1,536871461]],["^@",[228,"^A","They've published an [Erlang](https://en.wikipedia.org/wiki/Erlang_(programming_language) book a language from [Prolog](https://en.wikipedia.org/wiki/Prolog) that introduced the [actor model](https://en.wikipedia.org/wiki/Actor_model)",536871384]],["^@",[228,"^3","44c25f135",536871377]],["^@",[231,"^D",true,536871386]],["^@",[231,"^E",0,536871394]],["^@",[231,"^A","Scala got a big traction since it used dynamic types, what make it easier than JAVA static types",536871395]],["^@",[231,"^3","e72ff246e",536871386]],["^@",[232,"^D",true,536871388]],["^@",[232,"^E",1,536871396]],["^@",[232,"^A","dynamic types try to infer the the while the code runs",536871397]],["^@",[232,"^3","222b63c98",536871388]],["^@",[233,"^:",238,536871405]],["^@",[233,"^D",true,536871389]],["^@",[233,"^E",11,536871485]],["^@",[233,"^=",123,536871446]],["^@",[233,"^A","Package managers [[Package manager]]",536871446]],["^@",[233,"^3","415671f6c",536871389]],["^@",[234,"^:",231,536871394]],["^@",[234,"^:",232,536871396]],["^@",[234,"^:",239,536871409]],["^@",[234,"^:",240,536871410]],["^@",[234,"^:",241,536871413]],["^@",[234,"^D",true,536871391]],["^@",[234,"^E",10,536871485]],["^@",[234,"^A","Dynamic x static types",536871393]],["^@",[234,"^3","71ac7e04b",536871391]],["^@",[235,"^:",236,536871398]],["^@",[235,"^:",237,536871399]],["^@",[235,"^3","c2ef541f9",536871398]],["^@",[235,"^B",1617467609891,536871398]],["^@",[235,"^C",1617467609891,536871398]],["^@",[235,"^6","Dynamic x static types",536871398]],["^@",[236,"^D",true,536871398]],["^@",[236,"^E",0,536871398]],["^@",[236,"^=",119,536871399]],["^@",[236,"^A","{{[[TODO]]}} decision matrix",536871400]],["^@",[236,"^3","412ed23a2",536871398]],["^@",[236,"^B",1617467609891,536871398]],["^@",[236,"^C",1617467609891,536871398]],["^@",[237,"^D",true,536871399]],["^@",[237,"^E",1,536871399]],["^@",[237,"^A","matrix",536871399]],["^@",[237,"^3","6b85b3709",536871399]],["^@",[238,"^D",true,536871403]],["^@",[238,"^E",0,536871405]],["^@",[238,"^A","Maven, Gradall, npm, pip, pear, compooser, sbt",536871408]],["^@",[238,"^3","ab9210de3",536871403]],["^@",[239,"^D",true,536871409]],["^@",[239,"^E",2,536871409]],["^@",[239,"^A","Scala has problems with lib compatibility https://docs.scala-lang.org/overviews/core/binary-compatibility-of-scala-releases.html",536871410]],["^@",[239,"^3","34a403bec",536871409]],["^@",[240,"^D",true,536871410]],["^@",[240,"^E",3,536871410]],["^@",[240,"^A","what requires a better lib/dependency management, improving package managers",536871412]],["^@",[240,"^3","d8674531d",536871410]],["^@",[241,"^D",true,536871413]],["^@",[241,"^E",4,536871413]],["^@",[241,"^=",121,536871450]],["^@",[241,"^A","GO lang avoids that trying to download all the libs and compiling them to have a binary that doesn't require extra deps in the system (static compilation) [[Make files]]. Go connects into Github instead of package manager servers",536871450]],["^@",[241,"^3","1b72de59e",536871413]],["^@",[244,"^:",245,536871425]],["^@",[244,"^:",246,536871426]],["^@",[244,"^:",247,536871428]],["^@",[244,"^:",248,536871430]],["^@",[244,"^:",249,536871432]],["^@",[244,"^:",250,536871434]],["^@",[244,"^:",251,536871436]],["^@",[244,"^:",252,536871439]],["^@",[244,"^:",253,536871441]],["^@",[244,"^D",true,536871421]],["^@",[244,"^E",12,536871485]],["^@",[244,"^A","Go problems",536871423]],["^@",[244,"^3","fd54a729c",536871421]],["^@",[245,"^D",true,536871423]],["^@",[245,"^E",0,536871425]],["^@",[245,"^A","type inference",536871426]],["^@",[245,"^3","fd5af5c4b",536871423]],["^@",[246,"^D",true,536871426]],["^@",[246,"^E",1,536871426]],["^@",[246,"^A","go types",536871428]],["^@",[246,"^3","179c0135b",536871426]],["^@",[247,"^D",true,536871428]],["^@",[247,"^E",2,536871428]],["^@",[247,"^A","doesn't implement traits",536871430]],["^@",[247,"^3","de2036e61",536871428]],["^@",[248,"^D",true,536871430]],["^@",[248,"^E",3,536871430]],["^@",[248,"^A","null pointers",536871432]],["^@",[248,"^3","6c130cff8",536871430]],["^@",[249,"^D",true,536871432]],["^@",[249,"^E",4,536871432]],["^@",[249,"^A","generics",536871434]],["^@",[249,"^3","cc76b2014",536871432]],["^@",[250,"^D",true,536871434]],["^@",[250,"^E",5,536871434]],["^@",[250,"^A","overwrite operators",536871436]],["^@",[250,"^3","7141bbdfd",536871434]],["^@",[251,"^D",true,536871436]],["^@",[251,"^E",6,536871436]],["^@",[251,"^A","http://yager.io/programming/go.html",536871438]],["^@",[251,"^3","a3281a568",536871436]],["^@",[252,"^D",true,536871439]],["^@",[252,"^E",7,536871439]],["^@",[252,"^A","https://medium.com/@tucnak/why-go-is-a-poorly-designed-language-1cc04e5daf2",536871440]],["^@",[252,"^3","5c120ee6c",536871439]],["^@",[253,"^D",true,536871441]],["^@",[253,"^E",8,536871441]],["^@",[253,"^A","https://github.com/ksimka/go-is-not-good",536871442]],["^@",[253,"^3","4eb8d233d",536871441]],["^@",[257,"^D",true,536871454]],["^@",[257,"^E",0,536871454]],["^@",[257,"^A","",536871454]],["^@",[257,"^3","e83050c6c",536871454]],["^@",[258,"^D",true,536871456]],["^@",[258,"^E",1,536871456]],["^@",[258,"^A","",536871456]],["^@",[258,"^3","987304b5e",536871456]],["^@",[264,"^F",true,536871463]],["^@",[265,"^:",266,536871465]],["^@",[265,"^:",267,536871467]],["^@",[265,"^:",269,536871473]],["^@",[265,"^:",270,536871475]],["^@",[265,"^3","cd80ab42c",536871465]],["^@",[265,"^B",1617552086968,536871465]],["^@",[265,"^C",1617552086968,536871465]],["^@",[265,"^6","libs x sidecars/service mesh",536871466]],["^@",[266,"^D",true,536871465]],["^@",[266,"^E",1,536871471]],["^@",[266,"^A","https://microservices.io/patterns/deployment/service-mesh.html",536871467]],["^@",[266,"^3","d644563d5",536871465]],["^@",[266,"^B",1617552086968,536871465]],["^@",[266,"^C",1617552086968,536871465]],["^@",[267,"^D",true,536871467]],["^@",[267,"^E",0,536871471]],["^@",[267,"^=",119,536871469]],["^@",[267,"^A","{{[[TODO]]}} Add decision matrix",536871469]],["^@",[267,"^3","833df3eab",536871467]],["^@",[269,"^D",true,536871473]],["^@",[269,"^E",2,536871473]],["^@",[269,"^A","https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar",536871474]],["^@",[269,"^3","8181202ca",536871473]],["^@",[270,"^D",true,536871475]],["^@",[270,"^E",3,536871475]],["^@",[270,"^A","",536871475]],["^@",[270,"^3","db71f8176",536871475]],["^@",[271,"^D",true,536871476]],["^@",[271,"^E",0,536871477]],["^@",[271,"^A","",536871476]],["^@",[271,"^3","7d2f2670f",536871476]],["^@",[272,"^D",true,536871478]],["^@",[272,"^E",3,536871485]],["^@",[272,"^A","",536871478]],["^@",[272,"^3","7a7532b86",536871478]],["^@",[273,"^3","1efecf79e",536871478]],["^@",[273,"^B",1617552527891,536871478]],["^@",[273,"^C",1617552527891,536871478]],["^@",[273,"^6","libraries",536871478]],["^@",[274,"^D",true,536871479]],["^@",[274,"^E",2,536871485]],["^@",[274,"^A","",536871479]],["^@",[274,"^3","23d72e04b",536871479]],["^@",[275,"^3","7bb398775",536871479]],["^@",[275,"^B",1617552552863,536871479]],["^@",[275,"^C",1617552552863,536871479]],["^@",[275,"^6","J2EE",536871479]],["^@",[277,"^D",true,536871480]],["^@",[277,"^E",1,536871486]],["^@",[277,"^A","Every programmer must learn ate least a programming language every year (https://blog.teamtreehouse.com/learn-a-new-programming-language-every-year)",536871480]],["^@",[277,"^3","bec6836af",536871480]],["^@",[278,"^D",true,536871480]],["^@",[278,"^E",2,536871486]],["^@",[278,"^A","They've published an [Erlang](https://en.wikipedia.org/wiki/Erlang_(programming_language) book a language from [Prolog](https://en.wikipedia.org/wiki/Prolog) that introduced the [actor model](https://en.wikipedia.org/wiki/Actor_model)",536871480]],["^@",[278,"^3","b25f9968d",536871480]],["^@",[279,"^3","3ada48e1b",536871483]],["^@",[279,"^B",1617552575513,536871483]],["^@",[279,"^C",1617552575513,536871483]],["^@",[279,"^6","Erlang",536871483]],["^@",[280,"^F",true,536871482]],["^@",[281,"^F",true,536871483]],["^@",[282,"^D",true,536871486]],["^@",[282,"^E",0,536871486]],["^@",[282,"^A","",536871486]],["^@",[282,"^3","63b5bc142",536871486]],["^@",[283,"^3","380a74043",536871487]],["^@",[283,"^B",1617552604029,536871487]],["^@",[283,"^C",1617552604029,536871487]],["^@",[283,"^6","pragmatic-programmer",536871487]],["^@",[285,"^3","c4b35fad1",536871488]],["^@",[285,"^B",1617553445004,536871488]],["^@",[285,"^C",1617553445004,536871488]],["^@",[285,"^6","Alonzo-Church",536871488]],["^@",[287,"^:",289,536871495]],["^@",[287,"^:",290,536871497]],["^@",[287,"^:",292,536871501]],["^@",[287,"^:",294,536871505]],["^@",[287,"^:",300,536871519]],["^@",[287,"^3","8614e8450",536871491]],["^@",[287,"^B",1617553476269,536871491]],["^@",[287,"^C",1617553590657,536871495]],["^@",[287,"^6","Lambda calculus",536871491]],["^@",[288,"^D",true,536871493]],["^@",[288,"^E",2,536871493]],["^@",[288,"^A","",536871493]],["^@",[288,"^3","26a7bd9ba",536871493]],["^@",[289,"^D",true,536871495]],["^@",[289,"^E",0,536871495]],["^@",[289,"^A","https://brilliant.org/wiki/lambda-calculus/",536871496]],["^@",[289,"^3","d1b792f1b",536871495]],["^@",[290,"^D",true,536871497]],["^@",[290,"^E",1,536871497]],["^@",[290,"^=",291,536871500]],["^@",[290,"^A","In the 1950s, when ((John McCarthy)) was developing #Lisp he adopted Church's notation",536871562]],["^@",[290,"^3","f09f25cdc",536871497]],["^@",[291,"^:",318,536871561]],["^@",[291,"^3","203eb63b3",536871500]],["^@",[291,"^B",1617553689496,536871500]],["^@",[291,"^C",1617555179187,536871561]],["^@",[291,"^6","Lisp",536871562]],["^@",[292,"^D",true,536871501]],["^@",[292,"^E",2,536871501]],["^@",[292,"^A","https://stackoverflow.com/questions/48210733/link-between-lambda-calculus-and-lambda-expressions-in-c/",536871507]],["^@",[292,"^3","7a96ffdbf",536871501]],["^@",[294,"^D",true,536871505]],["^@",[294,"^E",3,536871506]],["^@",[294,"^A","",536871531]],["^@",[294,"^3","04bd8d0af",536871505]],["^@",[300,"^D",true,536871519]],["^@",[300,"^E",4,536871519]],["^@",[300,"^A","",536871532]],["^@",[300,"^3","483978524",536871519]],["^@",[311,"^D",true,536871544]],["^@",[311,"^E",4,536871544]],["^@",[311,"^A","",536871544]],["^@",[311,"^3","30023ace6",536871544]],["^@",[318,"^D",true,536871561]],["^@",[318,"^E",0,536871561]],["^@",[318,"^A","",536871561]],["^@",[318,"^3","3a0544ffd",536871561]],["^@",[322,"^3","81af92b41",536871567]],["^@",[322,"^B",1617555439829,536871567]],["^@",[322,"^C",1617555439829,536871567]],["^@",[322,"^6","sdf",536871567]],["^@",[426,"^3","14820f15f",536871577]],["^@",[426,"^B",1617555758520,536871577]],["^@",[426,"^C",1617555758520,536871577]],["^@",[426,"^6","FFF",536871577]],["^@",[427,"^3","e7d65c351",536871577]],["^@",[427,"^B",1617555758588,536871577]],["^@",[427,"^C",1617555758588,536871577]],["^@",[427,"^6","CCC",536871577]],["^@",[428,"^3","0b287e889",536871577]],["^@",[428,"^B",1617555758592,536871577]],["^@",[428,"^C",1617555758592,536871577]],["^@",[428,"^6","104E8B",536871577]],["^@",[717,"^:",718,536871591]],["^@",[717,"^:",719,536871592]],["^@",[717,"^:",720,536871593]],["^@",[717,"^:",721,536871594]],["^@",[717,"^:",722,536871596]],["^@",[717,"^:",723,536871597]],["^@",[717,"^:",727,536871606]],["^@",[717,"^:",728,536871607]],["^@",[717,"^:",730,536871608]],["^@",[717,"^3","2b13fd458",536871591]],["^@",[717,"^B",1617556093257,536871591]],["^@",[717,"^C",1617556093257,536871591]],["^@",[717,"^6","Locks/Mutex",536871651]],["^@",[718,"^D",true,536871591]],["^@",[718,"^E",1,536871601]],["^@",[718,"^A","https://datacadamia.com/data/concurrency/lock",536871592]],["^@",[718,"^3","9cb58e111",536871591]],["^@",[718,"^B",1617556093257,536871591]],["^@",[718,"^C",1617556093257,536871591]],["^@",[719,"^D",true,536871592]],["^@",[719,"^E",2,536871601]],["^@",[719,"^A","Deadlock",536871593]],["^@",[719,"^3","055cfe380",536871592]],["^@",[720,"^D",true,536871593]],["^@",[720,"^E",3,536871601]],["^@",[720,"^A","Isolation level",536871594]],["^@",[720,"^3","18378d448",536871593]],["^@",[721,"^D",true,536871594]],["^@",[721,"^E",4,536871601]],["^@",[721,"^A","semaphore",536871596]],["^@",[721,"^3","66f361dd6",536871594]],["^@",[722,"^D",true,536871596]],["^@",[722,"^E",5,536871601]],["^@",[722,"^A","File system locks",536871605]],["^@",[722,"^3","e87176d78",536871596]],["^@",[723,"^:",725,536871601]],["^@",[723,"^:",726,536871603]],["^@",[723,"^D",true,536871597]],["^@",[723,"^E",0,536871597]],["^@",[723,"^A","WHY?",536871598]],["^@",[723,"^3","a124eeacc",536871597]],["^@",[725,"^D",true,536871600]],["^@",[725,"^E",0,536871601]],["^@",[725,"^A","Locks are mechanisms that prevent destructive interaction between transactions accessing the same resource. ",536871602]],["^@",[725,"^3","da4161c35",536871600]],["^@",[726,"^D",true,536871603]],["^@",[726,"^E",1,536871603]],["^@",[726,"^A","This helps maintain the integrity of the data by ensuring that only one process at a time can modify the same data. ",536871604]],["^@",[726,"^3","577f5dc68",536871603]],["^@",[727,"^D",true,536871606]],["^@",[727,"^E",6,536871606]],["^@",[727,"^=",729,536871607]],["^@",[727,"^A","[[Mutex x Latch]]",536871607]],["^@",[727,"^3","2e6667db2",536871606]],["^@",[728,"^D",true,536871607]],["^@",[728,"^E",7,536871607]],["^@",[728,"^A","https://datacadamia.com/data/concurrency/start",536871608]],["^@",[728,"^3","a2292bd63",536871607]],["^@",[729,"^3","328fb9a81",536871607]],["^@",[729,"^B",1617556431874,536871607]],["^@",[729,"^C",1617556431874,536871607]],["^@",[729,"^6","Mutex x Latch",536871607]],["^@",[730,"^D",true,536871608]],["^@",[730,"^E",8,536871608]],["^@",[730,"^A","",536871608]],["^@",[730,"^3","51c825b70",536871608]],["^@",[731,"^:",732,536871609]],["^@",[731,"^3","e9d2be03f",536871609]],["^@",[731,"^B",1617556863806,536871609]],["^@",[731,"^C",1617556863806,536871609]],["^@",[731,"^6","POSIX",536871609]],["^@",[732,"^D",true,536871609]],["^@",[732,"^E",0,536871609]],["^@",[732,"^=",119,536871610]],["^@",[732,"^A","{{[[TODO]]}} Add details",536871610]],["^@",[732,"^3","5c4398982",536871609]],["^@",[732,"^B",1617556863806,536871609]],["^@",[732,"^C",1617556863806,536871609]],["^@",[733,"^D",true,536871611]],["^@",[733,"^E",0,536871613]],["^@",[733,"^A","NGPT IBM",536871620]],["^@",[733,"^3","d5a9a58bf",536871611]],["^@",[734,"^D",true,536871615]],["^@",[734,"^E",1,536871615]],["^@",[734,"^A","M : N",536871616]],["^@",[734,"^3","b58dbcf95",536871615]],["^@",[735,"^:",736,536871622]],["^@",[735,"^:",737,536871624]],["^@",[735,"^:",739,536871627]],["^@",[735,"^:",740,536871629]],["^@",[735,"^D",true,536871617]],["^@",[735,"^E",2,536871617]],["^@",[735,"^A","NPTL ",536871621]],["^@",[735,"^3","8e81d21b3",536871617]],["^@",[736,"^D",true,536871621]],["^@",[736,"^E",2,536871627]],["^@",[736,"^A","https://en.wikipedia.org/wiki/Native_POSIX_Thread_Library ",536871623]],["^@",[736,"^3","c08d97561",536871621]],["^@",[737,"^D",true,536871624]],["^@",[737,"^E",0,536871624]],["^@",[737,"^A","1 : 1",536871625]],["^@",[737,"^3","f6558af0f",536871624]],["^@",[739,"^D",true,536871627]],["^@",[739,"^E",1,536871627]],["^@",[739,"^A","Kernel 2.6",536871628]],["^@",[739,"^3","e8aa96c75",536871627]],["^@",[740,"^D",true,536871629]],["^@",[740,"^E",3,536871629]],["^@",[740,"^A","After that threads in linux started to be usable",536871630]],["^@",[740,"^3","febbe69c4",536871629]],["^@",[741,"^D",true,536871631]],["^@",[741,"^E",0,536871631]],["^@",[741,"^A","",536871631]],["^@",[741,"^3","9e29277f0",536871631]],["^@",[742,"^:",743,536871632]],["^@",[742,"^:",744,536871633]],["^@",[742,"^3","f9b075307",536871631]],["^@",[742,"^B",1617557201210,536871631]],["^@",[742,"^C",1617557211972,536871632]],["^@",[742,"^6","Scheduler",536871634]],["^@",[743,"^D",true,536871632]],["^@",[743,"^E",0,536871632]],["^@",[743,"^A","https://en.wikipedia.org/wiki/Scheduling_(computing)",536871633]],["^@",[743,"^3","7da58aa4b",536871632]],["^@",[744,"^:",745,536871636]],["^@",[744,"^:",746,536871637]],["^@",[744,"^:",747,536871640]],["^@",[744,"^:",748,536871642]],["^@",[744,"^:",749,536871645]],["^@",[744,"^:",750,536871647]],["^@",[744,"^D",true,536871633]],["^@",[744,"^E",1,536871633]],["^@",[744,"^A","Linux CFS",536871635]],["^@",[744,"^3","eef844980",536871633]],["^@",[745,"^D",true,536871635]],["^@",[745,"^E",2,536871650]],["^@",[745,"^A","Completely fair scheduler",536871637]],["^@",[745,"^3","526e0d464",536871635]],["^@",[746,"^D",true,536871637]],["^@",[746,"^E",4,536871650]],["^@",[746,"^A","Good for videos and audios",536871639]],["^@",[746,"^3","28bd9b7f5",536871637]],["^@",[747,"^D",true,536871640]],["^@",[747,"^E",3,536871650]],["^@",[747,"^A","Ingo Molnár and Con Kolivas",536871641]],["^@",[747,"^3","b7b4b97b1",536871640]],["^@",[748,"^D",true,536871642]],["^@",[748,"^E",5,536871650]],["^@",[748,"^A","Gives preference for interactive applications",536871644]],["^@",[748,"^3","c32e30130",536871642]],["^@",[749,"^D",true,536871645]],["^@",[749,"^E",1,536871650]],["^@",[749,"^A","https://developer.ibm.com/technologies/linux/tutorials/l-completely-fair-scheduler",536871646]],["^@",[749,"^3","075b1f457",536871645]],["^@",[750,"^D",true,536871647]],["^@",[750,"^E",0,536871647]],["^@",[750,"^A","Linux 2.6",536871648]],["^@",[750,"^3","3c66d461f",536871647]],["^@",[752,"^:",759,536871659]],["^@",[752,"^:",760,536871660]],["^@",[752,"^:",762,536871675]],["^@",[752,"^:",772,536871698]],["^@",[752,"^3","933b72c22",536871652]],["^@",[752,"^B",1617557695802,536871652]],["^@",[752,"^C",1617557695802,536871652]],["^@",[752,"^6","Concurrency",536871652]],["^@",[753,"^D",true,536871652]],["^@",[753,"^E",0,536871662]],["^@",[753,"^=",755,536871653]],["^@",[753,"^A","[[Supervisor]]",536871653]],["^@",[753,"^3","4deaf09aa",536871652]],["^@",[753,"^B",1617557695802,536871652]],["^@",[753,"^C",1617557695802,536871652]],["^@",[754,"^D",true,536871653]],["^@",[754,"^E",1,536871662]],["^@",[754,"^=",140,536871654]],["^@",[754,"^A","[[Threads x Fork]]",536871654]],["^@",[754,"^3","bbd93d69d",536871653]],["^@",[755,"^3","b11d950d1",536871653]],["^@",[755,"^B",1617557711666,536871653]],["^@",[755,"^C",1617557711666,536871653]],["^@",[755,"^6","Supervisor",536871653]],["^@",[756,"^D",true,536871654]],["^@",[756,"^E",3,536871699]],["^@",[756,"^=",717,536871656]],["^@",[756,"^A","[[Locks/Mutex]]",536871656]],["^@",[756,"^3","5f61ccf1b",536871654]],["^@",[757,"^D",true,536871656]],["^@",[757,"^E",4,536871699]],["^@",[757,"^=",729,536871657]],["^@",[757,"^A","[[Mutex x Latch]]",536871657]],["^@",[757,"^3","73d9ea429",536871656]],["^@",[758,"^D",true,536871657]],["^@",[758,"^E",5,536871699]],["^@",[758,"^=",742,536871659]],["^@",[758,"^A","[[Scheduler]]",536871659]],["^@",[758,"^3","17167bee9",536871657]],["^@",[759,"^:",761,536871672]],["^@",[759,"^:",765,536871680]],["^@",[759,"^D",true,536871659]],["^@",[759,"^E",1,536871668]],["^@",[759,"^A","C10K problem - 1999",536871670]],["^@",[759,"^3","d60d040d8",536871659]],["^@",[760,"^:",753,536871662]],["^@",[760,"^:",754,536871663]],["^@",[760,"^:",756,536871664]],["^@",[760,"^:",757,536871667]],["^@",[760,"^:",758,536871668]],["^@",[760,"^:",773,536871699]],["^@",[760,"^D",true,536871660]],["^@",[760,"^E",0,536871660]],["^@",[760,"^A","Related",536871661]],["^@",[760,"^3","e061138c0",536871660]],["^@",[761,"^D",true,536871671]],["^@",[761,"^E",0,536871672]],["^@",[761,"^A","https://en.wikipedia.org/wiki/C10k_problem",536871673]],["^@",[761,"^3","127d9fded",536871671]],["^@",[762,"^:",763,536871677]],["^@",[762,"^:",764,536871678]],["^@",[762,"^:",766,536871683]],["^@",[762,"^:",767,536871686]],["^@",[762,"^D",true,536871674]],["^@",[762,"^E",2,536871675]],["^@",[762,"^A","IO",536871676]],["^@",[762,"^3","fe68057ef",536871674]],["^@",[763,"^D",true,536871676]],["^@",[763,"^E",0,536871677]],["^@",[763,"^A","Any input/output in the system",536871678]],["^@",[763,"^3","9340750d2",536871676]],["^@",[764,"^D",true,536871678]],["^@",[764,"^E",1,536871678]],["^@",[764,"^A","When a thread is executing an IO operation, it keeps blocked until the end of operation",536871683]],["^@",[764,"^3","899d7727e",536871678]],["^@",[765,"^D",true,536871680]],["^@",[765,"^E",1,536871680]],["^@",[765,"^A","https://migratorydata.com/2013/10/10/scaling-to-12-million-concurrent-connections-how-migratorydata-did-it/",536871681]],["^@",[765,"^3","a53da5eb9",536871680]],["^@",[766,"^D",true,536871683]],["^@",[766,"^E",2,536871683]],["^@",[766,"^A","While a thread is doing an IO, others threads can execute",536871685]],["^@",[766,"^3","b43861f62",536871683]],["^@",[767,"^:",768,536871689]],["^@",[767,"^:",769,536871690]],["^@",[767,"^:",770,536871691]],["^@",[767,"^:",771,536871694]],["^@",[767,"^:",776,536871703]],["^@",[767,"^D",true,536871686]],["^@",[767,"^E",3,536871686]],["^@",[767,"^A","Async IO",536871687]],["^@",[767,"^3","d7ef9c315",536871686]],["^@",[768,"^D",true,536871687]],["^@",[768,"^E",0,536871689]],["^@",[768,"^A","https://en.wikipedia.org/wiki/Asynchronous_I/O",536871690]],["^@",[768,"^3","a3d46c87c",536871687]],["^@",[769,"^D",true,536871690]],["^@",[769,"^E",1,536871690]],["^@",[769,"^A","Doesn't block the thread",536871691]],["^@",[769,"^3","d759b22ff",536871690]],["^@",[770,"^D",true,536871691]],["^@",[770,"^E",2,536871691]],["^@",[770,"^A","you can attach an event to be executed when the system return the operation was finished",536871693]],["^@",[770,"^3","8c0ab436d",536871691]],["^@",[771,"^D",true,536871694]],["^@",[771,"^E",3,536871694]],["^@",[771,"^A","https://en.wikipedia.org/wiki/Event-driven_programming",536871695]],["^@",[771,"^3","52c41225c",536871694]],["^@",[772,"^:",777,536871708]],["^@",[772,"^:",784,536871724]],["^@",[772,"^:",786,536871728]],["^@",[772,"^:",787,536871731]],["^@",[772,"^:",788,536871733]],["^@",[772,"^:",792,536871741]],["^@",[772,"^D",true,536871696]],["^@",[772,"^E",3,536871698]],["^@",[772,"^A","NGINX",536871707]],["^@",[772,"^3","d6bd7e65e",536871696]],["^@",[773,"^D",true,536871699]],["^@",[773,"^E",2,536871699]],["^@",[773,"^=",774,536871700]],["^@",[773,"^A","[[Thread x Process]]",536871700]],["^@",[773,"^3","8da49cba0",536871699]],["^@",[774,"^:",775,536871701]],["^@",[774,"^3","d6c9013a6",536871700]],["^@",[774,"^B",1617558264152,536871700]],["^@",[774,"^C",1617558268097,536871701]],["^@",[774,"^6","Thread x Process",536871700]],["^@",[775,"^D",true,536871701]],["^@",[775,"^E",0,536871701]],["^@",[775,"^A","https://www.geeksforgeeks.org/difference-between-process-and-thread/",536871702]],["^@",[775,"^3","400725dda",536871701]],["^@",[776,"^D",true,536871703]],["^@",[776,"^E",4,536871703]],["^@",[776,"^A","IOKQueue",536871706]],["^@",[776,"^3","2dd982fed",536871703]],["^@",[777,"^:",778,536871710]],["^@",[777,"^D",true,536871707]],["^@",[777,"^E",1,536871731]],["^@",[777,"^A","Process master",536871709]],["^@",[777,"^3","bc940f684",536871707]],["^@",[778,"^:",779,536871717]],["^@",[778,"^:",780,536871718]],["^@",[778,"^:",781,536871719]],["^@",[778,"^D",true,536871709]],["^@",[778,"^E",0,536871710]],["^@",[778,"^A","Process workers",536871711]],["^@",[778,"^3","3618e89ee",536871709]],["^@",[779,"^D",true,536871711]],["^@",[779,"^E",0,536871717]],["^@",[779,"^=",783,536871720]],["^@",[779,"^A","executes async IO inside a loop [[Event loop]]",536871720]],["^@",[779,"^3","4842d48f0",536871711]],["^@",[780,"^D",true,536871713]],["^@",[780,"^E",1,536871721]],["^@",[780,"^A","Every time the loop runs it checks the termination of operations",536871715]],["^@",[780,"^3","c43588905",536871713]],["^@",[781,"^D",true,536871715]],["^@",[781,"^E",2,536871721]],["^@",[781,"^A","Executes the attached events related to them",536871716]],["^@",[781,"^3","f6a33f98c",536871715]],["^@",[783,"^3","81defb946",536871720]],["^@",[783,"^B",1617558536316,536871720]],["^@",[783,"^C",1617558536316,536871720]],["^@",[783,"^6","Event loop",536871720]],["^@",[784,"^D",true,536871722]],["^@",[784,"^E",2,536871731]],["^@",[784,"^A","Restaurant with cliente requesting for the chef and the chef can only get the orders after finish another order",536871725]],["^@",[784,"^3","29bf13195",536871722]],["^@",[786,"^D",true,536871728]],["^@",[786,"^E",3,536871731]],["^@",[786,"^A","Restaurant with an waiter where the waiter (worker) receives the orders and the chef receives multiple orders, as he waits until something be ready, ha can still prepare another order.",536871730]],["^@",[786,"^3","208bf5016",536871728]],["^@",[787,"^D",true,536871731]],["^@",[787,"^E",0,536871731]],["^@",[787,"^A","https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/",536871732]],["^@",[787,"^3","229be1b42",536871731]],["^@",[788,"^D",true,536871733]],["^@",[788,"^E",4,536871733]],["^@",[788,"^=",789,536871737]],["^@",[788,"^A","It can handle millions of connections as it avoids threads [[context switch ]]",536871737]],["^@",[788,"^3","96696485d",536871733]],["^@",[789,"^:",790,536871738]],["^@",[789,"^:",791,536871739]],["^@",[789,"^3","30a9b2feb",536871737]],["^@",[789,"^B",1617559119803,536871737]],["^@",[789,"^C",1617559123062,536871738]],["^@",[789,"^6","context switch ",536871737]],["^@",[790,"^D",true,536871738]],["^@",[790,"^E",0,536871738]],["^@",[790,"^A","https://www.geeksforgeeks.org/difference-between-thread-context-switch-and-process-context-switch/",536871739]],["^@",[790,"^3","4f47c7eca",536871738]],["^@",[791,"^D",true,536871739]],["^@",[791,"^E",1,536871739]],["^@",[791,"^A","",536871739]],["^@",[791,"^3","45ad27d01",536871739]],["^@",[792,"^:",793,536871744]],["^@",[792,"^:",794,536871745]],["^@",[792,"^:",795,536871747]],["^@",[792,"^:",796,536871749]],["^@",[792,"^D",true,536871741]],["^@",[792,"^E",5,536871741]],["^@",[792,"^=",797,536871752]],["^@",[792,"^A","[[Reactor pattern]]",536871752]],["^@",[792,"^3","4b96b7567",536871741]],["^@",[793,"^D",true,536871743]],["^@",[793,"^E",1,536871749]],["^@",[793,"^A","Nginx",536871745]],["^@",[793,"^3","3a665f825",536871743]],["^@",[794,"^D",true,536871745]],["^@",[794,"^E",2,536871749]],["^@",[794,"^A","Python twisted",536871747]],["^@",[794,"^3","95628360c",536871745]],["^@",[795,"^D",true,536871747]],["^@",[795,"^E",3,536871749]],["^@",[795,"^A","Node V8",536871748]],["^@",[795,"^3","1bf243361",536871747]],["^@",[796,"^D",true,536871749]],["^@",[796,"^E",0,536871749]],["^@",[796,"^A","https://en.wikipedia.org/wiki/Reactor_pattern",536871751]],["^@",[796,"^3","835e3eb28",536871749]],["^@",[797,"^3","522cbb3cc",536871752]],["^@",[797,"^B",1617559215258,536871752]],["^@",[797,"^C",1617559215258,536871752]],["^@",[797,"^6","Reactor pattern",536871752]],["^@",[798,"^:",799,536871753]],["^@",[798,"^3","04-05-2021",536871753]],["^@",[798,"^B",1617639974516,536871753]],["^@",[798,"^C",1617639974516,536871753]],["^@",[798,"^6","April 05, 2021",536871753]],["^@",[799,"^D",true,536871753]],["^@",[799,"^E",0,536871753]],["^@",[799,"^A","",536871753]],["^@",[799,"^3","f1367b2f0",536871753]],["^@",[799,"^B",1617639974516,536871753]],["^@",[799,"^C",1617639974516,536871753]]]]]]